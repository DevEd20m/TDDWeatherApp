apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "es.jarroyo.tddweatherapp"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        def STRING = "String"
        def INT = "int"

        all {
            buildConfigField STRING, "OPEN_WEATHER_API_KEY", '"f11780da3330643cd659bb6dbb4e44a3"'
            buildConfigField STRING, "OPEN_WEATHER_URL_ICON_BASE", '"http://openweathermap.org/img/w/"'
        }

        debug {
            testCoverageEnabled = true
            applicationIdSuffix '.debug'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        mock {
            initWith debug
            applicationIdSuffix = ".mock"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

ext {
    support_library_version = '28.1.1'
    constraint_layout_version = '1.1.0'
    espresso_version = '3.0.1'
    retrofit_version = '2.4.0'
    okhttp_version = '3.9.1'
    kotlin_coroutines_version = '1.0.0'
    mockito_version = '2.18.3'

    anko_version = '0.10.4'
    buildToolsVersion = "27.0.3"
    playServicesLocationVersion = "16.0.0"
    playServicesAuthVersion = "15.0.1"
    playServicesVisionVersion = "15.0.2"

    firebaseAuthVersion = "16.0.2"
    firebaseCoreVersion = "16.0.1"
    firebaseMessagingVersion = "17.1.0"
    firebaseFireStoreVersion = "17.0.3"
    firebaseDatabaseVersion = "16.0.1"

    retrofitVersion = "2.3.0"
    butterknifeVersion = "8.5.1"
    daggerVersion = "2.18"
    picassoVersion = "2.71828"
    roomVersion = "1.1.0"
    gsonVersion = "2.8.5"

    GsonVersion = "2.8.4"

    work_version = "1.0.0-alpha04"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'

    // LOCATION
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"

    // TEST
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.mockito:mockito-core:$mockito_version"
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0'
    testImplementation "android.arch.core:core-testing:1.1.1"

    // ARCHITECTURE COMPONENTS
    implementation "android.arch.lifecycle:extensions:1.1.0"
    implementation "android.arch.lifecycle:viewmodel:1.1.0"

    // DAGGER
    implementation "com.google.dagger:dagger:$daggerVersion"
    androidTestImplementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"

    // BUTTERKNIFE
    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    // COROUTINES
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // GSON
    implementation "com.google.code.gson:gson:$gsonVersion"

    // ROOM PERSISTENCE
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"

    // PICASSO
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'
    //implementation "com.github.bumptech.glide:glide:$glideVersion"


}

kapt {
    generateStubs = true
}
